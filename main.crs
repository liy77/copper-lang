import test_alias from std
import { io } from std
import ai from ai_copper

func void hello() {
    println!("Hello World!")
}

func void hello_with_name(name: string) {
    println!("Hello {}",  name)
}

mut integer = 1
integer++
integer++
integer--
constantvalue = 4

a = ai::Tensor::rand(2,3)
a.print()
println!("{}", constantvalue)
println!("{}", integer)
hello()
hello_with_name("Liy".to_string())

func void alo() {
    println!("Alo Test")
}

alo()

func void copper() {
    println!("Hello Copper")
}

copper()

class Person {
    name: String
    name2: String
    inttest: i32

    Person(name: String, name2: String) {
        self.name = name
        self.name2 = "Carlos".to_string()
        self.inttest = 32
    }

    void test(self) { 
        println!("{} {}", self.name, self.name2); 
    }

    String concat_names(self) {
        return self.name.to_string() + &self.name2
    }
}

Person::new("Liy".to_string(), "Jones".to_string()).test()

struct Point {
    x: f64,
    y: f64,
}

impl Point {
    func Point new(x: f64, y: f64) {
        return Point {
            x,
            y
        }
    }
    func f64 getX(self) {
        return self.x
    }
}

Point::new(2.0, 1.0)

struct Container {
    json_data: json,
    xml_content: xml,
    toml_config: toml
}

func void process(input: json) {
    // processa JSON
}